<计算机网络>
VLAN虚拟局域网
	物理位置无关的逻辑局域网组，VLAN帧有一个明确的标识符(数据链路层含有标识)，使用交换机可配置VLAN

网络层
	网络互联设备路由器工作在网络层
	网络层只提供简单的，无连接的，尽最大能力交付的数据报服务(IP数据报分组发送，不编号)
	不提供服务质量承诺,因此可能出错，丢失，重复，失序，超时
	网络层功能简单可以使路由器更简单，则路由器更便宜
	IP层的简单，使运输层更复杂(差错控制，流量控制)
	
运输层
	提供一条逻辑上端到端的通道
	TCP提供全双工可靠信道，UDP提供不可靠信道
	
	udp
		无连接，最大交付，面向报文(一次交付一个完整报文，不合并不拆分)，无拥塞控制
	TCP
		面向连接，可靠，全双工，面向字节流
		IP层是不可靠的，TCP需要可靠要付出更多
		
		停止等待协议(发送-确认)
			发送方A发送消息M1后暂存副本，启动超时重传定时器
			接受方B收到消息后有差错则丢弃，无差错则向接收方发送确认M1
			A在定时器时间内收到确认M1继续工作;否则重发M1;
			B再次收到M1表明确认M1没有收到，则再次发送确认M1并丢弃M1
		连续ARQ
			一次发送一条消息停止等待利用率太低，发送方连续多个分组
			发送方维持一个窗口连续发送，收到确认则滑动窗口
			接收方累积确认，确认一批连续分组中最后收到的分组
		滑动窗口		
			发送方有发送窗口，接受方有接受窗口;一次批量发送，累积确认;无序的分组先存储，确认连续有序的
			超时重传时间的选择是TCP最负责问题之一
				根据RTT(往返时间)计算滑动平均值RTTs
				RTO应该>RTTs
				RTTd为|RTTs-新的RTT样本|的滑动平均值
				RTO=RTTs+4×RTTd
		
		TCP传输效率
			如果每次发送一个字节，则会产生很多微小分组，1B的数据加上IP首部，TCP首部形成41B的IP数据报
			如果接受方只有一个字节的缓存剩余空间，发送rwnd=1给接受方会导致每次发送一个字节
			很多的微小分组会影响性能	
			
		TCP流量控制
			发的太快，来不及收，接收方根据自己接受情况更改滑动窗口的大小，并将自己接受窗口大小(代表接受能力)通知发送方，发送方调整发送窗口大小
			流量控制就是抑制发送端的发送速度，使接受端可以来得及接受是端到端的问题
			持续定时器
				当rwnd=0时，发送方不在发送，当接受方再次不为0时向发送方发送rwnd调整信息若此消息丢失则，接受方等待发送，发送方等待rwnd消息
				互相等待，死锁，因此需要一个定时器接触死锁，主动发送探测报文
				
		拥塞控制
			网络资源总需求>可用资源
			拥塞引起重传更加剧拥塞
			拥塞控制使防止过多数据注入网络，使链路过载;是全局性问题涉及所有的主机，路由器等
			拥塞控制基本原理
				减少某些资源需求,如拒绝新连接或要求用户减少负荷，这会降低服务质量
				增加某些资源，如增加链路，增大链路带宽，另外通路分流，这会增加成本
				拥塞控制很难设计是动态的问题，设计bug会加剧恶化
			开环控制，设计前考虑拥塞发生因素，力求工作时不发生拥塞
			闭环控制，监测网络系统，检测拥塞发生的when,where等信息，然后发送拥塞信息到可处理的位置调整网络解决拥塞
				
			慢开始与拥塞避免
				发送方维持一个拥塞窗口cwnd的变量，标识网络拥塞程度,如果发送方没有按时收到确认报文则猜测网络发生了拥塞(猜测不一定完全正确，但是大多数情况)
				/x发送方的发送窗口=min(拥塞窗口,接受窗口)
				发送方根据网络拥塞程度和接受方接受能力决定发送速度
				x/
				慢开始是指开始发送数据时cwnd=1
				若没有发生拥塞 =>if cwnd<ssthresh cwnd=2*cwnd; elif cwnd>=ssthresh cwnd++  加法增大被称为拥塞避免
				发生拥塞 ssthresh=1/2*cwnd,cwnd=1
				AIMD算法 加法增大+乘法减小
			快重传和快恢复 
			随机早期检测RED 
			
		TCP的连接建立需要3次握手 
		TCP的连接撤销需要4此握手 
		TCP保活计时器
			防止客户端建立连接后故障
			服务器每次收到客户端数据则重置计时器，长时间没有客户端数据直到计时器到期后服务器每隔一段时间发送一个探测报文,若多个探测报文仍然没有响应则关闭连接.		
		
				
						
DHCP
	计算机需要配置 IP地址，子网掩码，默认路由器IP(默认网关),域名服务器IP(DNS IP /etc/resolv.conf )
	客户端通过广播DHCP自动获取一个IP,IP由DHCP服务器分配

----------
<TCP/IP|V1> 
Internet的正式标准以RFC文档出版，并不是所有软件都严格遵从RFC

链路层
	MTU
		不同网络都有一个MTU限制，若IP层数据大于MTU则需要进行分片
		路径MTU是不同网络通信时，不同网络MTU的最小值

IP层
	当主机接受到数据包时会判断是否发送给自己的
	若是
		则处理
	若不是
		主机是否被配置路由功能
			是
				转发
			不是	
				丢弃

	子网划分
  		IP地址由网络号和主机号构成，如B类地址16bit网络号和16bit主机号
  	 	有时并不需要在一个网络中安排这么多主机,因此对主机号在划分，使用掩码却分是网络号和主机号部分
  	 	例如
  	 	16bit网络号|8bit子网号|8bit主机号 
  	 	掩码为255.255.255.0
  
		子网划分对子网外的路由器是透明的

		ifconfig 
		netstat -in
	
	ARP 
		IP->MAC
		ARP会广播一个ARP请求数据帧，帧中包含一个IP。即询问所有主机
			你是这个IP地址的拥有者吗？请回答你的MAC地址 
		若某主机识别到此IP是自己的，则发送一个ARP应答
			我是IP x.x.x.x,我的MAC地址是 ...

		每个主机都有一个ARP高速缓存,这个高速缓存存放了最近的IP:MAC的记录.一般每一项记录有20m生存时间
		arp代理
			arp请求从一个网络经过路由器发送到另一个网络，则连接网络的路由器就可以回答该请求，欺骗发起者,路由器就是目的主机的代理.


		arp命令可查看/添加/删除主机的arp高速缓存


	RARP
		机器不知道自己的IP地址，广播RARP要求被告知自己的IP
		只有RARP服务器多RARP应答，告诉该机器它的IP,然后该机器以IP为自己的IP通信



	ICMP	
		控制报文协议，传递差错报文以及其它需要注意的信息
		报文类型字段和代码字段决定了报文的类型和功能


		Ping
			向主机发送ICMP回显请求

		Traceroute
			发送不同TTL值的数据包，接收不同跳数路由器发送到自己的ICMP超时报文.
			目的主机不会发送ICMP超时报文,因此发送一个udp报文设置一个无效端口，来得到一个ICMP端口不可达报文，判断是否目的主机.

			IP源站选路,通常IP是动态路由的应用程序并不关心控制，源站选路由发送者指定路由
			Traceroute -g 可指定必须要经过的中间路由

	
	IP选路
		netstat -rn 获得内核路由表

		IP 路由表
		Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
		0.0.0.0         10.175.255.254  0.0.0.0         UG        0 0          0 wlan0
	1	0.175.0.0      0.0.0.0         255.255.0.0     U         0 0          0 wlan0
	169.254.0.0     0.0.0.0         255.255.0.0     U         0 0          0 wlan0

		如果目的地址是0.0.0.0则转发给10.175.255.254

		route命令
			显示/更改 路由表



