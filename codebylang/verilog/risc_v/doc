risc-v
	分支 
		主要依赖分支预测，不使用延迟槽和指令条件码
		低端cpu设置默认分支预测规则，向后jump,向前不jump,主要利于循环
		
内存模型
	顺序一致性
		严格按序的，各个核按照顺序执行，不改变存储器访问指令顺序
		每一个存储器写指令，可以被所有处理器和观测到,保证可见性
	松散一致性
		允许多核系统的各个核存储器访问指令乱序执行，但引入了fence指令
		在需要顺序的位置使用fence，fence使指令乱序不越过fence,保证了fence前的先于fence后的执行顺序
		乱序 -> |fence| ->乱序，乱序不越过fence
	获取-释放
		release指令 
			仅屏障之前的所有存储器访问，即保证release之前的指令在release之前执行，不保证release之后的指令在release之后执行
		acquire指令 
			仅屏障之后的存储器访问
		仅fence一个方向，比fence指令约束更少
		
流水线
	流水线可视为对状态机的循环展开，面积换性能，空间换时间
	8051使用状态机，不使用流水线
	深度
		大 主频高，面积开销大，流水线预测错误成本大 #HPC 
		小 主频低，面积小，功耗低  #IOT
	冲突
		资源 
			停顿/资源复制
		数据
			非真相关 reg rename
			raw真相关  
				数据旁路前推
				指令乱序，插入不相关指令隔开相关指令

IF
	速度快
		itcm 
			物理上离处理器核非常接近的专用sram存储指令，容量有限
			可保证实时性，多用于超低功耗处理器
			#极低功耗处理器不使用缓存，缓存面积和功耗大
		icache
			有miss不能保证实时性
	不间断 ～ 分支预测
		静态预测 设置规则
		动态预测 记录并根据指令历史信息预测方向/地址
			BTB 缓存最近跳转指令目标地址
			RAS 函数调用和返回是成对的对于此类调用设置专门的跳转指令(call return)可以直接保存返回地址在返回跳转时预测使用
ID
	解压指令信息
	并非所有处理器在这个阶段读取寄存器操作数
	对于乱序发射的cpu，在ID之后和EX之前，待指令相关性解除后才从regfile取数

EX
	派遣 指令译码后派发到不同的指令等待队列中
	发射 从运算单元的等待队列中发射到运算器开始执行的过程
	执行-写回
	高性能超标量处理器 
		顺序派遣，乱序发射，乱序执行，乱序写回
		等待队列中指令，先解除相关性则先执行
		ROB 重排序缓存 乱序执行完后，写入到ROB中，由ROB按顺序写回
	分支解析能在流水线更靠前的位置，则预测错误造成的flush损失越小

交付
	指令结果起作用(交付)还是取消
	分支预测失败、异常、中断会造成指令被取消
	取消一般采用pipelien flush或指令条件码(arm)实现
	交付的阶段
		执行阶段 不执行
		写回阶段 执行不显现结果
		ROB队列阶段 执行不显现结果

中断
	现场保存与恢复
	中断优先级与仲裁
	中断嵌套,执行中断例程中，是否响应更高优先级的中断请求
	
低功耗
	soc级别 
		划分不同的电源域，不使用的模块可关闭电源
		划分不同的时钟域，某些模块可低频运行
		通过不同的电源域和时钟域可构建低功耗模式
	cpu级别
		支持休眠指令和休眠机制，休眠时保存信息到其它位置，直接关电
		arm 大核+小核，低性能下小核省电
		异构
	单元级别
		类似soc级别，在不同单元模块使用不同的电源域
