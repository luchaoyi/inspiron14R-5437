$date
	Mon Sep  5 11:47:15 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module div_top $end
$var wire 8 ! q [7:0] $end
$var wire 4 " r [3:0] $end
$var reg 4 # d_in [3:0] $end
$var reg 8 $ n [7:0] $end
$scope module d $end
$var wire 4 % denominator [3:0] $end
$var wire 8 & numberator [7:0] $end
$var reg 4 ' quotH [3:0] $end
$var reg 4 ( quotL [3:0] $end
$var reg 8 ) quotient [7:0] $end
$var reg 4 * remH [3:0] $end
$var reg 4 + remL [3:0] $end
$var reg 4 , remainder [3:0] $end
$scope task div4 $end
$var reg 5 - d [4:0] $end
$var reg 4 . denom [3:0] $end
$var reg 5 / n1 [4:0] $end
$var reg 4 0 n2 [3:0] $end
$var reg 8 1 number [7:0] $end
$var reg 4 2 quot [3:0] $end
$var reg 4 3 rem [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 3
b101 2
b1010 1
b101 0
b0 /
b10 .
b10 -
b0 ,
b0 +
b0 *
b101 )
b101 (
b0 '
b1010 &
b10 %
b1010 $
b10 #
b0 "
b101 !
$end
#10
b10 ,
b10 "
b1 !
b1 )
b10 +
b1 (
b10 3
b10 /
b1 2
b1 0
b11 -
b11 .
b101 1
b11 #
b11 %
b101 $
b101 &
#20
b11 ,
b11 "
b11 !
b11 )
b11 +
b11 (
b11 3
b11 2
b11 /
b11 0
b100 -
b100 .
b1111 1
b100 #
b100 %
b1111 $
b1111 &
#30
b0 ,
b0 "
b110 !
b110 )
b0 +
b110 (
b0 3
b110 2
b0 /
b110 0
b10 -
b10 .
b1100 1
b10 #
b10 %
b1100 $
b1100 &
#40
